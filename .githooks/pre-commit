#!/usr/bin/env bash

#########################
#                       #
#     Initializing      #
#                       #
#########################

PHPCS_BIN=./vendor/bin/phpcs
PHPCBF_BIN=./vendor/bin/phpcbf
PHPSTAN_BIN=./vendor/bin/phpstan
SAIL_BIN=./tools/laravel/sail/vendor/bin/sail

function sail() {
    $SAIL_BIN "$@" >/dev/null 2>&1
}

#########################
#                       #
#       Starting        #
#                       #
#########################

# All files in staging area (no deletions)
FILES=$(git diff --name-only --diff-filter=ACMR HEAD | grep \\.php)

if [ "$FILES" != "" ]; then
    # Code Style - PHPCS

    echo "[PRE-COMMIT] Checking PHPCS..."

    sail composer exec phpcs -n $FILES

    if [ $? != 0 ]; then
        echo "[PRE-COMMIT] Coding standards errors have been detected."
        echo "[PRE-COMMIT] Running PHP Code Beautifier and Fixer..."

        sail composer exec phpcbf -- -n $FILES

        echo "[PRE-COMMIT] Checking PHPCS again..."

        sail composer exec phpcs -- -n $FILES

        if [ $? != 0 ]; then
            echo "[PRE-COMMIT] PHP Code Beautifier and Fixer wasn't able to solve all problems."
            echo "[PRE-COMMIT] Run PHPCS manually and fix existing errors."
            exit 1
        fi

        echo "[PRE-COMMIT] All errors are fixed automatically."
        git add $FILES
    fi

	# Code Style - Laravel Pint

	echo "[PRE-COMMIT] Checking Laravel Pint..."

	sail composer exec pint -- --test

	if [ $? != 0 ]; then
		# Don't believe Laravel Pint checks for a while.
		echo "[PRE-COMMIT] Laravel Pint found problems."
		echo "[PRE-COMMIT] Run Laravel Pint manually and fix existing errors."
		exit 1
	fi

    # Code Quality

    echo "[PRE-COMMIT] Checking PHPStan..."
    sail composer exec phpstan analyse -- --memory-limit=-1

    if [ $? != 0 ]; then
        echo "[PRE-COMMIT] PHPStan found problems."
        echo "[PRE-COMMIT] Run PHPStan manually and fix existing errors."
        exit 1
    fi

    echo "[PRE-COMMIT] No errors found."
fi

exit $?
